#####################################################################
#   print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***

## Z_TILT_ADJUST if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one



[gcode_macro PRINT_START]

#SUPER SLICER-PRUSA SLICER: YOU MUST ADD THESE LINES TO PRINT START CODE IN THE PRINTER GCODE SECTION OR NOT OF THIS WiLL WORK - EACH LINE MUST BE UNCOMMENTED
#M104 S0 ; Stops PrusaSlicer from sending temp waits separately
#M140 S0
#print_start EXTRUDER=[first_layer_temperature[initial_extruder]] BED=[first_layer_bed_temperature]
gcode:
 
# This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
 {% set target_bed = params.BED|int %}
 {% set target_extruder = params.EXTRUDER|int %}
 {% set target_chamber = params.CHAMBER|default("40")|int %}
 {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
 {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
 {% set bed_type = params.BED_TYPE|default('') %}
 {% set filament_type = params.FILAMENT_TYPE %}
 {% set z_offset = 0 %}

 
 
 ######################## Filament z_offset #########################
 
 {% set PETG_zoffset = 0.03 %}      ; --> Set z_offset PETG, PET
 {% set ASA_zoffset = -0.01 %}      ; --> Set z_offset ASA
 {% set ABS_P_zoffset = -0.01 %}    ; --> Set z_offset ABS+
 {% set ABS_zoffset = -0.01 %}      ; --> Set z_offset ABS+
 {% set PCPBT_zoffset = -0.01 %}    ; --> Set z_offset ABS+ 
 
 ####################################################################



 ALL_LED_ON 
 SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 ;turn lcd on and red
 SET_GCODE_OFFSET Z=0  #Reset zoffset value
 M118 'Reset Z offset'
 M220 S100             #Reset extrusion value

 RESPOND TYPE=command MSG="action:prompt_begin Bed Type check"
 RESPOND TYPE=command MSG="action:prompt_text This print has a {bed_type} bed. Check it and continue with print"
 RESPOND TYPE=command MSG="action:prompt_show"
 
# Homes the printer, sets absolute positioning and updates the Stealthburner leds.
 SET_DISPLAY_TEXT MSG="HOMING ALL"                # Displays info  
 STATUS_HOMING         # Sets SB-leds to homing-mode
 G28                   # Full home (XYZ)
 G90                   # Absolut position
 ##  Uncomment for bed mesh (1 of 2)
 BED_MESH_CLEAR       # Clears old saved bed mesh (if any)
 SET_DISPLAY_TEXT MSG="CLEAR MESH"      # Displays info 
  
# Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
 {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="BED HEAT: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  
 {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 1min"                # Displays info
    G4 P6000                                          # Waits 5 min for the bedtemp to stabilize
 {% endif %}

# Heating nozzle to 150 degrees. This helps with getting a correct Z-home
 SET_DISPLAY_TEXT MSG="TAPPITY TaP 150c"          # Displays info
 M109 S150                                    # Heats the nozzle to 150c

##  Uncomment for V2 (Quad gantry level AKA QGL)
 SET_DISPLAY_TEXT MSG="QGL"      # Displays info
 STATUS_LEVELING                 # Sets SB-leds to leveling-mode
 quad_gantry_level               # Levels the buildplate via QGL
 SET_DISPLAY_TEXT MSG="CALIBRATING Z"      # Displays info  
 status_calibrating_z  
 G28 Z                           # Homes Z again after QGL

##  Uncomment for bed mesh (2 of 2)
 SET_DISPLAY_TEXT MSG="BED MESHING"    # Displays info
 STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
 bed_mesh_calibrate ADAPTIVE=1               # Starts bed mesh
 #BED_MESH_PROFILE LOAD=default
  
# Heats up the nozzle up to target via data from slicer
 SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
 STATUS_HEATING                                                # Sets SB-leds to heating-mode
 G90                                                           #Absolute positioning
 G0 X{printer.toolhead.axis_maximum.x // 2} Y{printer.toolhead.axis_minimum.y+2} F6000
 #G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
 M107                                                          # Turns off partcooling fan
 M109 S{target_extruder}                                       # Heats the nozzle to printing temp
 START_SOUND
  
#check filamen type
;ASA filament
 {% if filament_type == 'ASA' %}
    { action_respond_info( "ASA Filament" ) }
       M118 'adjusting z height for {filament_type}: {ASA_zoffset}mm'
       SET_GCODE_OFFSET Z_ADJUST={ASA_zoffset} MOVE=1           ; Set z_offset
       BEEP I=2 DUR=100 FREQ=1500
       SET_DISPLAY_TEXT MSG="NEVERMORE START"                  # Displays info
       M118 'Turn ON nevermore filter'
         nevermore_on SPEED=0.8                                            # Turns on the nevermore
         evermore_on SPEED=0.4                                  # Turns on the evermore
       check_filter 

;ABS+ filament
 {% elif filament_type == 'ABS+' %}
    { action_respond_info( "ABS+ Filament" ) }
       M118 'adjusting z height for {filament_type}: {ABS_P_zoffset}mm'
       SET_GCODE_OFFSET Z_ADJUST={ABS_P_zoffset} MOVE=1           ; Set z_offset
       BEEP I=2 DUR=100 FREQ=1500
       SET_DISPLAY_TEXT MSG="NEVERMORE START"                  # Displays info
       M118 'Turn ON nevermore filter'
       nevermore_on SPEED=0.6                                  # Turns on the nevermore
       evermore_on SPEED=0.4                                  # Turns on the evermore
       check_filter 

;ABS filament
 {% elif filament_type == 'ABS' %}
    { action_respond_info( "ABS Filament" ) }
       M118 'adjusting z height for {filament_type}: {ABS_zoffset}mm'
       SET_GCODE_OFFSET Z_ADJUST={ABS_zoffset} MOVE=1           ; Set z_offset
       BEEP I=2 DUR=100 FREQ=1500
       SET_DISPLAY_TEXT MSG="NEVERMORE START"                  # Displays info
       M118 'Turn ON nevermore filter'
       nevermore_on SPEED=0.6                                  # Turns on the nevermore
       evermore_on SPEED=0.4                                  # Turns on the evermore
       check_filter 
 
;PET, PETG filament
    {% elif filament_type == 'PETG' or filament_type == 'PET' %} ; If material type is ABS
       { action_respond_info( "PETG Filament" ) }
       M118 'adjusting z height for {filament_type}: {PETG_zoffset}mm'
       SET_GCODE_OFFSET Z_ADJUST={PETG_zoffset} MOVE=1         ; Set z_offset
       BEEP I=2 DUR=100 FREQ=1500
       SET_DISPLAY_TEXT MSG="NEVERMORE STOP"                  # Displays info
       M118 'Turn OFF nevermore filter'
       nevermore_OFF                                            # Turns OFF the nevermore

;PC-PBT filament
    {% elif filament_type == 'PC-PBT' %}
       { action_respond_info( "PC-PBT Filament" ) }
       M118 'adjusting z height for {filament_type}: {PCPBT_zoffset}mm'
       SET_GCODE_OFFSET Z_ADJUST={PCPBT_zoffset} MOVE=1           ; Set z_offset
       BEEP I=2 DUR=100 FREQ=1500
       SET_DISPLAY_TEXT MSG="NEVERMORE START"                  # Displays info
       M118 'Turn ON nevermore filter'
       nevermore_on SPEED=0.6                                  # Turns on the nevermore
       evermore_on SPEED=0.4                                  # Turns on the evermore
       check_filter 

    {%else %} ; If any other material type
    SET_GCODE_OFFSET Z_ADJUST=0 MOVE=1; Set z_offset
 {% endif %}

 
    
;check filamenT type    
 {% if bed_type == 'Textured PEI Plate' %}                   # <------ bed type z_offset
      {% set z_offset = -0.08 %}
 {% else %}
      {% set z_offset = 0 %}
 {% endif %}
    
  M118 'adjusting z height for {bed_type}: {z_offset}mm'
  SET_GCODE_OFFSET Z_ADJUST={z_offset} MOVE=1
  G92 E0
  SET_DISPLAY_TEXT MSG="Purging..."
  _ADAPTIVE_PURGE                              ;adaptive purge
  
# Gets ready to print by doing a purge line and updating the SB-leds
  #SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  STATUS_PRINTING                               # Sets SB-leds to printing-mode
  G90                                              # Absolute position
  _SFS_ENABLE                                      ;enable filament sensor
  UPDATE_DELAYED_GCODE ID=SCHEDULE_PRINT_LCD DURATION=5
  #M117 Printer goes brr

##------------------------------------------------------------------------------------------##
################################ END PRINT ###################################################
##------------------------------------------------------------------------------------------##

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    {% set max_z = printer.toolhead.axis_maximum.z %}
    {% set zhop = params.Z|default(5)|int %} 
    {% set z_present = [printer.toolhead.position.z + 50, max_z]|min %}
    
    M83 ; SET RELATIVE EXTRUDER
    G90                             ; absolute positioning
    G92 E0                         ; zero the extruder
    G1 X{x_safe} Y{y_safe} E-3.0 F20000                                   ; retract filament and move nozzle to remove stringing
    G92 E0 
    {% if (printer.gcode_move.position.z + zhop) < printer.toolhead.axis_maximum.z %}  ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{zhop} F300 ; raise Z up by z hop amount
      {% else %}
         { action_respond_info("End Print zhop exceeds maximum Z height.") }
    {% endif %}                                 
    G92 E0                         ; zero the extruder
    G1 E-12.0 F1800                 ; retract filament
    G92 E0                 
    M400  ;Clear buffer
    G90                            ; absolute positioning
    G1 X{printer.toolhead.axis_maximum.x - 1} Y{printer.toolhead.axis_maximum.y - 1} F6000
    M190 S0                                  ; Turn off bed heater
    G1 Z{z_present}                          ; lift z
    M107                                     ; turn off fan
    BED_MESH_CLEAR                           ; clear bed mesh
    M118 'Wait nozzle purge'
    G4 P90000                                ;wait 90s to purge extruder
    status_off
    OFF
    _SFS_DISABLE
    BEEP I=3 DUR=100 FREQ=300
    SET_DISPLAY_TEXT MSG="JOB 100% COMPLETE"          # Displays info
    SET_GCODE_OFFSET Z=0    ;reset zoffset 
    _ALL_LED_OFF
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    
    
[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    nevermore_off                        ;turn off nevermore filter
    evermore_off                         ;turn off evermore filter
    SET_DISPLAY_TEXT MSG="NEVERMORE SHUT DOWN"          # Displays info
    UPDATE_DELAYED_GCODE ID=SCHEDULE_CLEAR_SCREEN DURATION=5

[delayed_gcode LEDOFF]
gcode:
 SET_LED LED="btt_mini12864" RED=0.3 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1
 set_logo_leds_off 
 set_nozzle_leds_off
 CASE_LED_OFF

[gcode_macro ALL_LED_ON]
 Description: Turn On Case light, LCD and Stelathburner
gcode:
 SET_LED LED="btt_mini12864" RED=1 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1
 status_ready
 CASE_LED_ON

[gcode_macro _ALL_LED_OFF]
gcode:
 UPDATE_DELAYED_GCODE ID=LEDOFF DURATION=90


